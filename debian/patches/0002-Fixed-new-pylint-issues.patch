From: SZALAY Attila <sasa@debian.org>
Date: Tue, 19 Dec 2017 10:27:02 +0100
Subject: Fixed new pylint issues

---
 modules/python/pylib/pylintrc                                       | 2 +-
 modules/python/pylib/syslogng/debuggercli/completer.py              | 2 +-
 modules/python/pylib/syslogng/debuggercli/macrocompleter.py         | 6 +++---
 .../pylib/syslogng/debuggercli/tests/test_commandlinelexer.py       | 2 +-
 .../python/pylib/syslogng/debuggercli/tests/test_templatelexer.py   | 2 +-
 5 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/modules/python/pylib/pylintrc b/modules/python/pylib/pylintrc
index 92e4b72..c0bf699 100644
--- a/modules/python/pylib/pylintrc
+++ b/modules/python/pylib/pylintrc
@@ -40,7 +40,7 @@ load-plugins=
 # --disable=W"
 #disable=
 
-disable=C0111,W0613,R0903,I0011,W0142,E1101,R0921,R0922,R0801,C0330
+disable=C0111,W0613,R0903,I0011,W0142,E1101,R0921,R0922,R0801,C0330,R1705,C0201,C1801
 
 # C0111     missing-docstring       Our priority is to make the code document
 #                                   itself. Docstring is required only when
diff --git a/modules/python/pylib/syslogng/debuggercli/completer.py b/modules/python/pylib/syslogng/debuggercli/completer.py
index 3d746bf..30f38a9 100644
--- a/modules/python/pylib/syslogng/debuggercli/completer.py
+++ b/modules/python/pylib/syslogng/debuggercli/completer.py
@@ -28,6 +28,6 @@ class Completer(object):
     __metaclass__ = ABCMeta
 
     @abstractmethod
-    def complete(self, entire_text, word_to_be_completed):
+    def complete(self, entire_input, word_to_be_completed):
         """Function to return the list of potential completion for a word"""
         raise NotImplementedError
diff --git a/modules/python/pylib/syslogng/debuggercli/macrocompleter.py b/modules/python/pylib/syslogng/debuggercli/macrocompleter.py
index 01eba1c..b38c5a4 100644
--- a/modules/python/pylib/syslogng/debuggercli/macrocompleter.py
+++ b/modules/python/pylib/syslogng/debuggercli/macrocompleter.py
@@ -37,13 +37,13 @@ class MacroCompleter(Completer):
         self._macros = macros
         self._completions = []
 
-    def complete(self, entire_input, word):
+    def complete(self, entire_input, word_to_be_completed):
         if not self._looks_like_a_macro_prefix(entire_input):
             return []
-        self._collect_completions(word)
+        self._collect_completions(word_to_be_completed)
         return sorted([completion
                        for completion in self._completions
-                       if len(word) == 0 or completion.startswith(word)])
+                       if len(word_to_be_completed) == 0 or completion.startswith(word_to_be_completed)])
 
     def _looks_like_a_macro_prefix(self, entire_input):
         if entire_input == '':
diff --git a/modules/python/pylib/syslogng/debuggercli/tests/test_commandlinelexer.py b/modules/python/pylib/syslogng/debuggercli/tests/test_commandlinelexer.py
index f73faf5..b64e7c5 100644
--- a/modules/python/pylib/syslogng/debuggercli/tests/test_commandlinelexer.py
+++ b/modules/python/pylib/syslogng/debuggercli/tests/test_commandlinelexer.py
@@ -27,7 +27,7 @@ from .. import commandlinelexer
 
 class TestCommandLineLexer(TestLexer):
 
-    def _construct_lexer(self):
+    def _construct_lexer(self, *args, **kwargs):
         return commandlinelexer.CommandLineLexer()
 
     def test_lexer_returns_none_for_empty_string(self):
diff --git a/modules/python/pylib/syslogng/debuggercli/tests/test_templatelexer.py b/modules/python/pylib/syslogng/debuggercli/tests/test_templatelexer.py
index 6601af1..a21ffe8 100644
--- a/modules/python/pylib/syslogng/debuggercli/tests/test_templatelexer.py
+++ b/modules/python/pylib/syslogng/debuggercli/tests/test_templatelexer.py
@@ -27,7 +27,7 @@ from .test_lexer import TestLexer
 
 class TestTemplateLexer(TestLexer):
 
-    def _construct_lexer(self):
+    def _construct_lexer(self, *args, **kwargs):
         return templatelexer.TemplateLexer()
 
     def test_template_literals_are_returned_as_literal_tokens(self):
